<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Reports', 'doctrine');

/**
 * BaseReports
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $project_id
 * @property integer $task_id
 * @property time $start_time
 * @property time $end_time
 * @property float $task_hour
 * @property string $detail
 * @property date $date_at
 * @property User $User
 * @property ProjectDetail $ProjectDetail
 * @property TaskType $TaskType
 * 
 * @method integer       getId()            Returns the current record's "id" value
 * @method integer       getUserId()        Returns the current record's "user_id" value
 * @method integer       getProjectId()     Returns the current record's "project_id" value
 * @method integer       getTaskId()        Returns the current record's "task_id" value
 * @method time          getStartTime()     Returns the current record's "start_time" value
 * @method time          getEndTime()       Returns the current record's "end_time" value
 * @method float         getTaskHour()      Returns the current record's "task_hour" value
 * @method string        getDetail()        Returns the current record's "detail" value
 * @method date          getDateAt()        Returns the current record's "date_at" value
 * @method User          getUser()          Returns the current record's "User" value
 * @method ProjectDetail getProjectDetail() Returns the current record's "ProjectDetail" value
 * @method TaskType      getTaskType()      Returns the current record's "TaskType" value
 * @method Reports       setId()            Sets the current record's "id" value
 * @method Reports       setUserId()        Sets the current record's "user_id" value
 * @method Reports       setProjectId()     Sets the current record's "project_id" value
 * @method Reports       setTaskId()        Sets the current record's "task_id" value
 * @method Reports       setStartTime()     Sets the current record's "start_time" value
 * @method Reports       setEndTime()       Sets the current record's "end_time" value
 * @method Reports       setTaskHour()      Sets the current record's "task_hour" value
 * @method Reports       setDetail()        Sets the current record's "detail" value
 * @method Reports       setDateAt()        Sets the current record's "date_at" value
 * @method Reports       setUser()          Sets the current record's "User" value
 * @method Reports       setProjectDetail() Sets the current record's "ProjectDetail" value
 * @method Reports       setTaskType()      Sets the current record's "TaskType" value
 * 
 * @package    ProjectManagment
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReports extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reports');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('project_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('task_id', 'integer', 4, array(
             'type' => 'integer',
             'default' => 1,
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('start_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('end_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('task_hour', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('detail', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('date_at', 'date', null, array(
             'type' => 'date',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('ProjectDetail', array(
             'local' => 'project_id',
             'foreign' => 'id'));

        $this->hasOne('TaskType', array(
             'local' => 'task_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}