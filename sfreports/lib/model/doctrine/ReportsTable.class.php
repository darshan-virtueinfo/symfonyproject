<?php

/**
 * ReportsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ReportsTable extends Doctrine_Table
{
	 public static $ssTotalTaskHour = 0.00;
    /**
     * Returns an instance of this class.
     *
     * @return object ReportsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Reports');
    }
    
	public static function getReportDetail($ssDevName = '', $ssProjectName = '', $ssTaskType = '', $snStartDate = '' , $snEndDate = '', $bPagination = false)
    {
    	$ssQuery = Doctrine_Query::create()
    			->select('r.*, u.firstname as firstname, u.lastname as lastname, p.projectname as projectname, t.tasktype as tasktype') 
    			->from('Reports r')
    			->leftjoin('r.User u')
    			->leftjoin('r.ProjectDetail p')
    			->leftjoin('r.TaskType t');
    			
    	if(!empty($ssDevName)) 
    		$ssQuery->where('r.user_id = ?', $ssDevName);
    	if(!empty($ssProjectName))	
    		$ssQuery->andWhere('r.project_id = ?', $ssProjectName);
    	if(!empty($ssTaskType))			
    		$ssQuery->andWhere('r.task_id = ?', $ssTaskType);
    	if(!empty($snStartDate))				
    		$ssQuery->andWhere('r.date_at >= ?', $snStartDate);
    	if(!empty($snStartDate))				
    		$ssQuery->andWhere('r.date_at <= ?', $snEndDate);
    	
    	//$ssQuery->orderBy('r.date_at DESC');	
    	if($bPagination == true)
    		return $ssQuery;
    	else	 	
    		return $amReportsDetails = $ssQuery->execute();
    		
    	//$amReportsDetail = array();
    	
    	/*if(sizeof($amReportsDetails) > 0) { 
	    	foreach($amReportsDetails as $details)
	    	{
	    		self::$ssTotalTaskHour = self::$ssTotalTaskHour + $details['task_hour'];
	    		$amReportsDetail[] = $details;
	    	}
	    	
	    	return $amReportsDetail;
    	}*/
    }
    public static function getUserReportDetail($snUserId = '')
    {
    	$asUserReport = array ();
   		$ssQuery = Doctrine_Query::create()
    			->select('r.*, p.projectname, t.tasktype') 
    			->from('Reports r')
    			->leftjoin('r.ProjectDetail p')
    			->leftjoin('r.TaskType t')
    			->leftjoin('r.User u')
    			->where('user_id = ?', $snUserId)
	    		->orderBy('r.date_at DESC');

	    return $ssQuery;		
    }
    
	public static function getReport($ssDevName = '', $ssProjectName = '', $ssTaskType = '', $snStartDate = '' , $snEndDate = '')
    {
    	$ssQuery = Doctrine_Query::create()
    			->select('r.*, u.firstname as firstname, u.lastname as lastname, p.projectname as projectname, t.tasktype as tasktype') 
    			->from('Reports r')
    			->leftjoin('r.User u')
    			->leftjoin('r.ProjectDetail p')
    			->leftjoin('r.TaskType t');
    	
    			
    	if(!empty($ssDevName)) 
    		$ssQuery->where('r.user_id = ?', $ssDevName);
    	if(!empty($ssProjectName))	
    		$ssQuery->andWhere('r.project_id = ?', $ssProjectName);
    	if(!empty($ssTaskType))			
    		$ssQuery->andWhere('r.task_id = ?', $ssTaskType);
    	if(!empty($snStartDate))				
    		$ssQuery->andWhere('r.date_at >= ?', $snStartDate);
    	if(!empty($snStartDate))				
    		$ssQuery->andWhere('r.date_at <= ?', $snEndDate);
    	
    	return $amReportsDetails = $ssQuery->execute();
    	/*$amReportsDetail = array();
    	
    	if(sizeof($amReportsDetails) > 0) { 
	    	foreach($amReportsDetails as $details)
	    	{
	    		self::$ssTotalTaskHour = self::$ssTotalTaskHour + $details['task_hour'];
	    		$amReportsDetail[] = $details;
	    	}
	    	
	    	
	    	return $amReportsDetail;
    	}*/
    }
}